name: generate terraform plan & apply it

on: workflow_dispatch

env:
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  TF_VAR_hcloud_api_token: "${{ secrets.HCLOUD_API_TOKEN }}"
  TF_VAR_vm_ssh_key: "${{ vars.VM_SSH_KEY }}"

jobs:
  plan:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout this repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: set up terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: 1.9.8

      - name: initialize terraform
        run: terraform init

      - name: generate terraform plan
        run: terraform plan -input=false -detailed-exitcode -out=tf.plan

      - name: save terraform plan as artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: tf-plan-${{ github.run_id }}
          path: tf.plan

  apply:
    runs-on: ubuntu-24.04
    needs: plan
    environment: prod
    steps:
      - name: checkout this repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: set up terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: 1.9.8

      - name: initialize terraform
        run: terraform init

      - name: download terraform plan artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: tf-plan-${{ github.run_id }}

      - name: apply terraform plan
        run: terraform apply -input=false -auto-approve tf.plan
